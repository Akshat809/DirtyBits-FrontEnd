{"ast":null,"code":"import React from \"react\";\nimport axios from 'axios';\nimport Card from './Card';\n\nclass ProblemList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: []\n    };\n  }\n\n  componentDidMount() {\n    axios.post('http://54.198.168.63/getData/', {\n      \"type\": \"list\",\n      \"tags\": [\"String\"]\n    }).then(reponse => {\n      console.log(reponse.data);\n      this.setState({\n        questions: reponse.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n}\n\nexport default ProblemList;","map":{"version":3,"sources":["E:/Javascript/react/New Online Platform/DirtyBits-FrontEnd/src/Components/ProbemList/ProblemList.js"],"names":["React","axios","Card","ProblemList","Component","constructor","props","state","questions","componentDidMount","post","then","reponse","console","log","data","setState","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBR,IAAAA,KAAK,CAACS,IAAN,CAAW,+BAAX,EAA2C;AACzC,cAAS,MADgC;AAEzC,cAAS,CAAC,QAAD;AAFgC,KAA3C,EAIGC,IAJH,CAIQC,OAAO,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAApB;AACA,WAAKC,QAAL,CACE;AAAER,QAAAA,SAAS,EAACI,OAAO,CAACG;AAApB,OADF;AAGD,KATH,EAUGE,KAVH,CAUSC,KAAK,IAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAZH;AAaD;;AAtBuC;;AAyB1C,eAAef,WAAf","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport Card from './Card';\r\n\r\nclass ProblemList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      questions: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.post('http://54.198.168.63/getData/',{\r\n      \"type\" : \"list\",\r\n      \"tags\" : [\"String\"]\r\n    })\r\n      .then(reponse => {\r\n        console.log(reponse.data)\r\n        this.setState(\r\n          { questions:reponse.data }\r\n        )\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n}\r\nexport default ProblemList;\r\n"]},"metadata":{},"sourceType":"module"}