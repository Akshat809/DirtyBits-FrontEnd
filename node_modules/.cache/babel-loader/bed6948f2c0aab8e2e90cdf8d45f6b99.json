{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\himan\\\\OneDrive\\\\Desktop\\\\DirtyBits\\\\frontend\\\\src\\\\Components\\\\CodeEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport Editor from '@monaco-editor/react';\nimport { FillSpinner as Loader } from 'react-spinners-kit';\nimport ThemeDropDown from './ThemeDropDown';\nimport LanguageDropDown from './LanguageDropDown';\nimport InputField from './InputField';\nimport OutputField from './OutputField';\nimport axios from 'axios';\nimport './EditorStyle.css';\n\nconst CodeEditor = props => {\n  _s();\n\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const valueGetter = useRef();\n  const [theme, setTheme] = useState(\"dark\");\n  const [language, setLanguage] = useState(\"cpp\");\n  const [input, setInput] = useState(\"Enter Input\");\n  const [output, setOutput] = useState(\"Output will be Displayed Here\");\n\n  const handleEditorDidMount = _valueGetter => {\n    setIsEditorReady(true);\n    valueGetter.current = _valueGetter;\n  };\n\n  const compileCode = async data => {\n    const response = await axios.post(\"http://localhost:7000/dirtybits/run/\", data);\n    const out = response.data;\n\n    if (\"error\" in out) {\n      setOutput(\"ERROR \\n\" + out[\"error\"]);\n    } else {\n      setOutput(out[\"OUTPUT\"]);\n    }\n\n    setIsEditorReady(true);\n  };\n\n  const runCode = () => {\n    setIsEditorReady(false); // console.log(valueGetter.current(), language, theme, input);\n\n    if (input !== \"Enter Input\") {\n      const data = {\n        \"code\": valueGetter.current(),\n        \"lang\": \"C++\",\n        \"inp\": input\n      };\n      compileCode(data);\n    } else {\n      const data = {\n        \"code\": valueGetter.current(),\n        \"lang\": \"C++\"\n      };\n      compileCode(data);\n    }\n  };\n\n  const inputProvided = () => {\n    const inpVal = document.getElementById('custominput').checked;\n\n    if (inpVal) {} else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eight wide column\",\n        children: /*#__PURE__*/_jsxDEV(LanguageDropDown, {\n          props: language,\n          dispatch: setLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eight wide column\",\n        children: /*#__PURE__*/_jsxDEV(ThemeDropDown, {\n          props: theme,\n          dispatch: setTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: \"Enter Code Here\",\n      loading: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 24\n      }, this),\n      height: \"calc(100vh - 300px)\" // height = \"100vh\" \n      ,\n      width: \"100vw\",\n      theme: theme,\n      language: language,\n      editorDidMount: handleEditorDidMount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eight wide column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"ui checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: inputProvided,\n              id: \"custominput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Custom Input \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eight wide column\",\n          style: {\n            paddingTop: \"2%\",\n            alignItems: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui red button\",\n            onClick: runCode,\n            disabled: !isEditorReady,\n            children: \" Run Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), \"di\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CodeEditor, \"PZeGUAAzvR68JSeY5HoAp6Ik7uc=\");\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["C:/Users/himan/OneDrive/Desktop/DirtyBits/frontend/src/Components/CodeEditor.js"],"names":["React","useRef","useState","Editor","FillSpinner","Loader","ThemeDropDown","LanguageDropDown","InputField","OutputField","axios","CodeEditor","props","isEditorReady","setIsEditorReady","valueGetter","theme","setTheme","language","setLanguage","input","setInput","output","setOutput","handleEditorDidMount","_valueGetter","current","compileCode","data","response","post","out","runCode","inputProvided","inpVal","document","getElementById","checked","paddingTop","alignItems"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport Editor from '@monaco-editor/react';\r\nimport { FillSpinner as Loader } from 'react-spinners-kit';  \r\nimport ThemeDropDown from './ThemeDropDown';\r\nimport LanguageDropDown from './LanguageDropDown';\r\nimport InputField from './InputField';\r\nimport OutputField from './OutputField';\r\nimport axios from 'axios';\r\nimport './EditorStyle.css';\r\n\r\n\r\n\r\n\r\nconst CodeEditor = (props) => {\r\n\r\n    const [isEditorReady, setIsEditorReady] = useState(false);\r\n    const valueGetter = useRef();\r\n\r\n    const [theme, setTheme] = useState(\"dark\");\r\n    const [language, setLanguage] = useState(\"cpp\");\r\n    const [input, setInput] = useState(\"Enter Input\");\r\n    const [output, setOutput] = useState(\"Output will be Displayed Here\");\r\n\r\n    \r\n\r\n\r\n    const handleEditorDidMount = (_valueGetter) => {\r\n        setIsEditorReady(true);\r\n        valueGetter.current = _valueGetter;\r\n    }\r\n\r\n\r\n    const compileCode = async (data) => {\r\n        const response = await axios.post(\"http://localhost:7000/dirtybits/run/\", data);\r\n        const out = response.data;\r\n        if(\"error\" in out){\r\n            setOutput(\"ERROR \\n\" + out[\"error\"]);\r\n        }else{\r\n            setOutput(out[\"OUTPUT\"]);\r\n        }\r\n        setIsEditorReady(true);\r\n\r\n    }\r\n    \r\n\r\n    const runCode = () => {\r\n        setIsEditorReady(false);\r\n        // console.log(valueGetter.current(), language, theme, input);\r\n        if(input !== \"Enter Input\"){\r\n            const data = {\r\n                \"code\" : valueGetter.current(),\r\n                \"lang\" : \"C++\",\r\n                \"inp\" : input\r\n            }\r\n            compileCode(data);\r\n\r\n        }else{\r\n            const data = {\r\n                \"code\" : valueGetter.current(),\r\n                \"lang\" : \"C++\",\r\n            }\r\n            compileCode(data);\r\n        }\r\n    }\r\n\r\n    const inputProvided = () => {\r\n        const inpVal = document.getElementById('custominput').checked;\r\n        if(inpVal){\r\n\r\n        }else{\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"ui grid\">\r\n                <div className = \"eight wide column\">\r\n                    <LanguageDropDown props = {language} dispatch = {setLanguage}/>\r\n                </div>\r\n                <div className = \"eight wide column\">\r\n                    <ThemeDropDown props = {theme} dispatch = {setTheme}/>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <Editor\r\n            value = \"Enter Code Here\"\r\n            loading = {<Loader/ >}\r\n            height = \"calc(100vh - 300px)\"\r\n            // height = \"100vh\" \r\n            width = \"100vw\"\r\n            theme = {theme} \r\n            language = {language}\r\n            editorDidMount={handleEditorDidMount}\r\n            />\r\n            <div className = \"ui segment\">\r\n                {/* <div className = \"ui two column very relaxed grid\">\r\n                    <div className = \"column\">\r\n                        <InputField val = {input} dispatch = {setInput}/>\r\n                    </div>\r\n                    <div className = \"column\">\r\n                        <OutputField val = {output} dispatch = {setOutput}/>\r\n                    </div>\r\n                </div> */}\r\n                <div className = \"ui grid\">\r\n                    <div className = \"eight wide column\">\r\n                        <div class=\"ui checkbox\">\r\n                            <input type = \"checkbox\" onClick = {inputProvided} id = 'custominput'></input>\r\n                            <label>Custom Input </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"eight wide column\" style={{paddingTop:\"2%\", alignItems: \"right\"}}>\r\n                        <button className = \"ui red button\" onClick = {runCode} disabled={!isEditorReady}> Run Code</button>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            di\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default CodeEditor;\r\n"]},"metadata":{},"sourceType":"module"}