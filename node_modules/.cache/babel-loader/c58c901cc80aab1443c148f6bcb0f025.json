{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\himan\\\\OneDrive\\\\Desktop\\\\DirtyBits\\\\frontend\\\\src\\\\Components\\\\Problem\\\\CodeEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport Editor from '@monaco-editor/react';\nimport { FillSpinner as Loader } from 'react-spinners-kit';\nimport ThemeDropDown from './ThemeDropDown';\nimport LanguageDropDown from './LanguageDropDown';\nimport InputField from './InputField';\nimport OutputField from './OutputField';\nimport axios from 'axios';\nimport './EditorStyle.css';\n\nlet info = require('./data.json');\n\nconst CodeEditor = props => {\n  _s();\n\n  var mapping = {\n    \"python\": \"P3\",\n    \"cpp\": \"CP\"\n  };\n  var score;\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const valueGetter = useRef();\n  const [theme, setTheme] = useState(\"dark\");\n  const [language, setLanguage] = useState(\"python\");\n  const [input, setInput] = useState(\"Enter Input\");\n  const [output, setOutput] = useState(\"Output will be Displayed Here\");\n\n  const handleEditorDidMount = _valueGetter => {\n    setIsEditorReady(true);\n    valueGetter.current = _valueGetter;\n  };\n\n  const compileCode = async data => {\n    console.log(data);\n    const response = await axios.post(\"http://127.0.0.1:8000/run/\", data);\n    const out = response.data;\n    score = out['testCasesPassed'];\n    document.getElementById(\"result\").innerHTML = \"Test Cases Passed : \" + score;\n\n    if (out[\"error\"] !== \"\") {\n      setOutput(\"ERROR \\n\" + out[\"error\"]);\n    } else {\n      if (out[\"outputGen\"]) setOutput(out[\"outputGen\"]);\n    }\n\n    if (document.getElementById('custominput').checked) {\n      document.getElementById(\"inputfield\").style.display = \"none\";\n      document.getElementById(\"outputfield\").style.display = \"none\";\n      var x = document.getElementById(\"inputoutputfield\");\n      x.style.display = \"block\";\n      x.focus();\n      x.scrollIntoView();\n    } else {\n      document.getElementById(\"inputoutputfield\").style.display = 'none';\n      document.getElementById(\"inputfield\").style.display = \"none\";\n      var x = document.getElementById(\"outputfield\");\n      x.style.display = \"block\";\n      x.focus();\n      x.scrollIntoView();\n    }\n\n    setIsEditorReady(true);\n  };\n\n  const runCode = () => {\n    setIsEditorReady(false);\n\n    if (input !== \"Enter Input\") {\n      const data = {\n        \"userId\": 2,\n        \"problemId\": info.id,\n        \"code\": valueGetter.current(),\n        \"language\": mapping[language],\n        \"inputGiven\": input,\n        \"status\": \"R\",\n        \"testCasesPassed\": 0\n      };\n      compileCode(data);\n    } else {\n      const data = {\n        \"userId\": 2,\n        \"problemId\": info.id,\n        \"code\": valueGetter.current(),\n        \"language\": mapping[language],\n        \"inputGiven\": \"\",\n        \"status\": \"R\",\n        \"testCasesPassed\": 0\n      };\n      compileCode(data);\n    }\n  };\n\n  const inputProvided = () => {\n    const inpVal = document.getElementById('custominput').checked;\n    var x = document.getElementById(\"inputfield\");\n\n    if (inpVal) {\n      if (document.getElementById(\"outputfield\").style.display === \"block\") {\n        document.getElementById(\"outputfield\").style.display = 'none';\n        document.getElementById(\"inputoutputfield\").style.display = 'block';\n      } else if (document.getElementById(\"inputoutputfield\").style.display === 'block') {\n        document.getElementById(\"inputoutputfield\").style.display = 'block';\n      } else {\n        x.style.display = \"block\";\n        x.focus();\n        x.scrollIntoView();\n      }\n    } else {\n      x.style.display = \"none\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eight wide column\",\n        children: /*#__PURE__*/_jsxDEV(LanguageDropDown, {\n          props: language,\n          dispatch: setLanguage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eight wide column\",\n        children: /*#__PURE__*/_jsxDEV(ThemeDropDown, {\n          props: theme,\n          dispatch: setTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: \"Enter Code Here\",\n      loading: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 24\n      }, this),\n      height: \"calc(100vh - 300px)\",\n      theme: theme,\n      language: language,\n      editorDidMount: handleEditorDidMount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eight wide column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: inputProvided,\n              id: \"custominput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Custom Input \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eight wide column\",\n          style: {\n            paddingTop: \"2%\",\n            alignItems: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui red button\",\n            onClick: runCode,\n            disabled: !isEditorReady,\n            children: \" Run Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      id: \"inputfield\",\n      style: {\n        display: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(InputField, {\n        val: input,\n        dispatch: setInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      id: \"outputfield\",\n      style: {\n        display: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(OutputField, {\n        val: output,\n        dispatch: setOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui two column very relaxed grid\",\n      id: \"inputoutputfield\",\n      style: {\n        display: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          val: input,\n          dispatch: setInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(OutputField, {\n          val: output,\n          dispatch: setOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CodeEditor, \"xOUWizLrKx+JnQrrkYqH6JJN7O0=\");\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["C:/Users/himan/OneDrive/Desktop/DirtyBits/frontend/src/Components/Problem/CodeEditor.js"],"names":["React","useRef","useState","Editor","FillSpinner","Loader","ThemeDropDown","LanguageDropDown","InputField","OutputField","axios","info","require","CodeEditor","props","mapping","score","isEditorReady","setIsEditorReady","valueGetter","theme","setTheme","language","setLanguage","input","setInput","output","setOutput","handleEditorDidMount","_valueGetter","current","compileCode","data","console","log","response","post","out","document","getElementById","innerHTML","checked","style","display","x","focus","scrollIntoView","runCode","id","inputProvided","inpVal","paddingTop","alignItems"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport Editor from '@monaco-editor/react';\r\nimport { FillSpinner as Loader } from 'react-spinners-kit';  \r\nimport ThemeDropDown from './ThemeDropDown';\r\nimport LanguageDropDown from './LanguageDropDown';\r\nimport InputField from './InputField';\r\nimport OutputField from './OutputField';\r\nimport axios from 'axios';\r\nimport './EditorStyle.css';\r\n\r\nlet info = require('./data.json');\r\n\r\nconst CodeEditor = (props) => {\r\n\r\n    var mapping = {\"python\" : \"P3\", \"cpp\" : \"CP\"};\r\n    var score;\r\n\r\n    const [isEditorReady, setIsEditorReady] = useState(false);\r\n    const valueGetter = useRef();\r\n\r\n    const [theme, setTheme] = useState(\"dark\");\r\n    const [language, setLanguage] = useState(\"python\");\r\n    const [input, setInput] = useState(\"Enter Input\");\r\n    const [output, setOutput] = useState(\"Output will be Displayed Here\");\r\n\r\n    const handleEditorDidMount = (_valueGetter) => {\r\n        setIsEditorReady(true);\r\n        valueGetter.current = _valueGetter;\r\n    }\r\n    const compileCode = async (data) => {\r\n        console.log(data);\r\n        const response = await axios.post(\"http://127.0.0.1:8000/run/\", data);\r\n        const out = response.data;\r\n        score = out['testCasesPassed'];\r\n        document.getElementById(\"result\").innerHTML = \"Test Cases Passed : \" + score;\r\n        if(out[\"error\"] !== \"\"){\r\n            setOutput(\"ERROR \\n\" + out[\"error\"]);\r\n        }else{\r\n            if(out[\"outputGen\"])\r\n            setOutput(out[\"outputGen\"]);\r\n        }\r\n        if(document.getElementById('custominput').checked){\r\n            document.getElementById(\"inputfield\").style.display = \"none\";\r\n            document.getElementById(\"outputfield\").style.display = \"none\";\r\n            var x = document.getElementById(\"inputoutputfield\");\r\n            x.style.display = \"block\";\r\n            x.focus();\r\n            x.scrollIntoView();\r\n        }else{\r\n            document.getElementById(\"inputoutputfield\").style.display = 'none';\r\n            document.getElementById(\"inputfield\").style.display = \"none\";\r\n            var x = document.getElementById(\"outputfield\");\r\n            x.style.display = \"block\";\r\n            x.focus();\r\n            x.scrollIntoView();\r\n        }\r\n        setIsEditorReady(true);\r\n\r\n    }\r\n    const runCode = () => {\r\n        setIsEditorReady(false);\r\n        \r\n        if(input !== \"Enter Input\"){\r\n            const data = {\r\n                \"userId\": 2,\r\n                \"problemId\": info.id,\r\n                \"code\" : valueGetter.current(),\r\n                \"language\" : mapping[language],\r\n                \"inputGiven\" : input,\r\n                \"status\": \"R\",\r\n                \"testCasesPassed\" : 0\r\n            }\r\n            compileCode(data);\r\n\r\n        }else{\r\n            const data = {\r\n                \"userId\": 2,\r\n                \"problemId\": info.id,\r\n                \"code\" : valueGetter.current(),\r\n                \"language\" : mapping[language],\r\n                \"inputGiven\" : \"\",\r\n                \"status\": \"R\",\r\n                \"testCasesPassed\" : 0\r\n            }\r\n            compileCode(data);\r\n        }\r\n    }\r\n    const inputProvided = () => {\r\n        const inpVal = document.getElementById('custominput').checked;\r\n        var x = document.getElementById(\"inputfield\");\r\n        if(inpVal){\r\n            if(document.getElementById(\"outputfield\").style.display === \"block\"){\r\n                document.getElementById(\"outputfield\").style.display = 'none'\r\n                document.getElementById(\"inputoutputfield\").style.display = 'block'\r\n            }else if(document.getElementById(\"inputoutputfield\").style.display === 'block'){\r\n                document.getElementById(\"inputoutputfield\").style.display = 'block'\r\n            }else{\r\n                x.style.display = \"block\";\r\n                x.focus();\r\n                x.scrollIntoView();\r\n            }\r\n        }else{\r\n            x.style.display = \"none\";\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className = \"ui grid\">\r\n                <div className = \"eight wide column\">\r\n                    <LanguageDropDown props = {language} dispatch = {setLanguage}/>\r\n                </div>\r\n                <div className = \"eight wide column\">\r\n                    <ThemeDropDown props = {theme} dispatch = {setTheme}/>\r\n                </div>\r\n            </div>\r\n            {/* <hr/> */}\r\n            <br/>\r\n            <Editor\r\n            value = \"Enter Code Here\"\r\n            loading = {<Loader/ >}\r\n            height = \"calc(100vh - 300px)\"\r\n            theme = {theme} \r\n            language = {language}\r\n            editorDidMount={handleEditorDidMount}\r\n            />\r\n            <div className = \"ui segment\">\r\n                <h3 id = \"result\"></h3>\r\n                <div className = \"ui grid\">\r\n                    <div className = \"eight wide column\">\r\n                        <div className =\"ui checkbox\">\r\n                            <input type = \"checkbox\" onClick = {inputProvided} id = 'custominput'></input>\r\n                            <label>Custom Input </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"eight wide column\" style={{paddingTop:\"2%\", alignItems: \"right\"}}>\r\n                        <button className = \"ui red button\" onClick = {runCode} disabled = {!isEditorReady}> Run Code</button>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>           \r\n                <div className = \"column\" id = \"inputfield\" style = {{display:\"none\"}}>\r\n                    <InputField val = {input} dispatch = {setInput}/>\r\n                </div>\r\n            \r\n                <div className = \"column\" id = \"outputfield\" style = {{display:\"none\"}}>\r\n                    <OutputField val = {output} dispatch = {setOutput}/>\r\n                </div>           \r\n                <div className = \"ui two column very relaxed grid\" id = \"inputoutputfield\" style = {{display:\"none\"}}>\r\n                    <div className = \"column\">\r\n                        <InputField val = {input} dispatch = {setInput}/>\r\n                    </div>\r\n                    <div className = \"column\">\r\n                        <OutputField val = {output} dispatch = {setOutput}/>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CodeEditor;\r\n"]},"metadata":{},"sourceType":"module"}