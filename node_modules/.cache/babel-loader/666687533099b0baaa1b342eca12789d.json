{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Javascript\\\\react\\\\New Online Platform\\\\DirtyBits-FrontEnd\\\\src\\\\Components\\\\ProbemList\\\\Component\\\\Checkbox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 15\n}, this));\nexport default function CheckboxLabels(props) {\n  _s();\n\n  const {\n    tags\n  } = props;\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginRight: '9%',\n      flexFlow: 'wrap'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        width: '50%'\n      },\n      className: \"\",\n      children: [\"Categories \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 103\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: state.checkedA,\n          onChange: handleChange,\n          name: \"checkedA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this),\n        label: \"Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: state.checkedB,\n          onChange: handleChange,\n          name: \"checkedB\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this),\n        label: \"String\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: state.checkedF,\n          onChange: handleChange,\n          name: \"checkedF\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this),\n        label: \"Linked List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: state.checkedG,\n          onChange: handleChange,\n          name: \"checkedG\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this),\n        label: \"Trees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxLabels, \"s0kYLBcYtsmrjKj7Q1QiIZBSEss=\");\n\n_c = CheckboxLabels;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxLabels\");","map":{"version":3,"sources":["E:/Javascript/react/New Online Platform/DirtyBits-FrontEnd/src/Components/ProbemList/Component/Checkbox.js"],"names":["React","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","GreenCheckbox","root","color","checked","props","CheckboxLabels","tags","state","setState","useState","checkedA","checkedB","checkedF","checkedG","handleChange","event","target","name","display","justifyContent","marginRight","flexFlow","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AAEA,MAAMC,aAAa,GAAGT,UAAU,CAAC;AAC/BU,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAEV,KAAK,CAAC,GAAD,CADR;AAEJ,iBAAa;AACXU,MAAAA,KAAK,EAAEV,KAAK,CAAC,GAAD;AADD;AAFT,GADyB;AAO/BW,EAAAA,OAAO,EAAE;AAPsB,CAAD,CAAV,CAQlBC,KAAD,iBAAW,QAAC,QAAD;AAAU,EAAA,KAAK,EAAC,SAAhB;AAAA,KAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,QARQ,CAAtB;AAUA,eAAe,SAASC,cAAT,CAAwBD,KAAxB,EAA+B;AAAA;;AAC5C,QAAM;AAACE,IAAAA;AAAD,MAASF,KAAf;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACmB,QAAN,CAAe;AACvCC,IAAAA,QAAQ,EAAE,IAD6B;AAEvCC,IAAAA,QAAQ,EAAE,IAF6B;AAGvCC,IAAAA,QAAQ,EAAE,IAH6B;AAIvCC,IAAAA,QAAQ,EAAE;AAJ6B,GAAf,CAA1B;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAab;AAA9C,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACe,MAAAA,OAAO,EAAC,MAAT;AAAgBC,MAAAA,cAAc,EAAC,UAA/B;AAA0CC,MAAAA,WAAW,EAAC,IAAtD;AAA2DC,MAAAA,QAAQ,EAAC;AAApE,KAAZ;AAAA,4BACA;AAAK,MAAA,KAAK,EAAG;AAAEH,QAAAA,OAAO,EAAC,MAAV;AAAiBC,QAAAA,cAAc,EAAC,YAAhC;AAA8CG,QAAAA,KAAK,EAAC;AAApD,OAAb;AAA0E,MAAA,SAAS,EAAC,EAApF;AAAA,6CAAkG;AAAA;AAAA;AAAA;AAAA,cAAlG;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA,8BACA,QAAC,gBAAD;AACI,QAAA,OAAO,eAAE,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEf,KAAK,CAACG,QAAzB;AAAmC,UAAA,QAAQ,EAAEI,YAA7C;AAA2D,UAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,gBADb;AAEI,QAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADA,eAKE,QAAC,gBAAD;AACE,QAAA,OAAO,eACL,QAAC,QAAD;AACE,UAAA,OAAO,EAAEP,KAAK,CAACI,QADjB;AAEE,UAAA,QAAQ,EAAEG,YAFZ;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AASE,QAAA,KAAK,EAAC;AATR;AAAA;AAAA;AAAA;AAAA,cALF,eAgBI,QAAC,gBAAD;AACA,QAAA,OAAO,eACL,QAAC,QAAD;AACE,UAAA,OAAO,EAAEP,KAAK,CAACK,QADjB;AAEE,UAAA,QAAQ,EAAEE,YAFZ;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBAFF;AASA,QAAA,KAAK,EAAC;AATN;AAAA;AAAA;AAAA;AAAA,cAhBJ,eA2BI,QAAC,gBAAD;AACA,QAAA,OAAO,eACL,QAAC,QAAD;AACE,UAAA,OAAO,EAAEP,KAAK,CAACM,QADjB;AAEE,UAAA,QAAQ,EAAEC,YAFZ;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBAFF;AASA,QAAA,KAAK,EAAC;AATN;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GA1DuBT,c;;KAAAA,c","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default function CheckboxLabels(props) {\r\n  const {tags} = props;\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <div style={{display:'flex',justifyContent:'flex-end',marginRight:'9%',flexFlow:'wrap'}}>\r\n    <div style={ { display:'flex',justifyContent:'flex-start', width:'50%' }} className=\"\">Categories <hr></hr> </div>\r\n    <FormGroup row>\r\n    <FormControlLabel\r\n        control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n        label=\"Array\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedB}\r\n            onChange={handleChange}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label='String'\r\n      />\r\n        <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedF}\r\n            onChange={handleChange}\r\n            name=\"checkedF\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label='Linked List'\r\n      />\r\n        <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedG}\r\n            onChange={handleChange}\r\n            name=\"checkedG\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label='Trees'\r\n      />\r\n    </FormGroup>\r\n    </div>\r\n\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}