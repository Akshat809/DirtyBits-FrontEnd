{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\himan\\\\OneDrive\\\\Desktop\\\\DirtyBits\\\\frontend\\\\src\\\\Components\\\\CodeEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport Editor from '@monaco-editor/react';\nimport { FillSpinner as Loader } from 'react-spinners-kit';\nimport ThemeDropDown from './ThemeDropDown';\nimport LanguageDropDown from './LanguageDropDown';\nimport InputField from './InputField';\nimport OutputField from './OutputField';\nimport axios from 'axios';\nimport './EditorStyle.css';\n\nconst CodeEditor = props => {\n  _s();\n\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const valueGetter = useRef();\n  const [theme, setTheme] = useState(\"dark\");\n  const [language, setLanguage] = useState(\"cpp\");\n  const [input, setInput] = useState(\"Enter Input\");\n  const [output, setOutput] = useState(\"Output will be Displayed Here\");\n\n  const handleEditorDidMount = _valueGetter => {\n    setIsEditorReady(true);\n    valueGetter.current = _valueGetter;\n  };\n\n  const compileCode = async data => {\n    const response = await axios.post(\"http://localhost:7000/dirtybits/run/\", data);\n    const out = response.data;\n\n    if (\"error\" in out) {\n      setOutput(\"ERROR \\n\" + out[\"error\"]);\n    } else {\n      setOutput(out[\"OUTPUT\"]);\n    }\n\n    setIsEditorReady(true);\n  };\n\n  const runCode = () => {\n    setIsEditorReady(false); // console.log(valueGetter.current(), language, theme, input);\n\n    if (input !== \"Enter Input\") {\n      const data = {\n        \"code\": valueGetter.current(),\n        \"lang\": \"C++\",\n        \"inp\": input\n      };\n      compileCode(data);\n    } else {\n      const data = {\n        \"code\": valueGetter.current(),\n        \"lang\": \"C++\"\n      };\n      compileCode(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      value: \"Enter Code Here\",\n      loading: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 24\n      }, this) // height = \"calc(70vh - 60px)\"\n      ,\n      height: \"70vh\",\n      width: \"100vw\",\n      theme: theme,\n      language: language,\n      editorDidMount: handleEditorDidMount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui two column very relaxed grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            val: input,\n            dispatch: setInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(OutputField, {\n            val: output,\n            dispatch: setOutput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CodeEditor, \"PZeGUAAzvR68JSeY5HoAp6Ik7uc=\");\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["C:/Users/himan/OneDrive/Desktop/DirtyBits/frontend/src/Components/CodeEditor.js"],"names":["React","useRef","useState","Editor","FillSpinner","Loader","ThemeDropDown","LanguageDropDown","InputField","OutputField","axios","CodeEditor","props","isEditorReady","setIsEditorReady","valueGetter","theme","setTheme","language","setLanguage","input","setInput","output","setOutput","handleEditorDidMount","_valueGetter","current","compileCode","data","response","post","out","runCode"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport Editor from '@monaco-editor/react';\r\nimport { FillSpinner as Loader } from 'react-spinners-kit';  \r\nimport ThemeDropDown from './ThemeDropDown';\r\nimport LanguageDropDown from './LanguageDropDown';\r\nimport InputField from './InputField';\r\nimport OutputField from './OutputField';\r\nimport axios from 'axios';\r\nimport './EditorStyle.css';\r\n\r\n\r\n\r\n\r\nconst CodeEditor = (props) => {\r\n\r\n    const [isEditorReady, setIsEditorReady] = useState(false);\r\n    const valueGetter = useRef();\r\n\r\n    const [theme, setTheme] = useState(\"dark\");\r\n    const [language, setLanguage] = useState(\"cpp\");\r\n    const [input, setInput] = useState(\"Enter Input\");\r\n    const [output, setOutput] = useState(\"Output will be Displayed Here\");\r\n\r\n    \r\n\r\n\r\n    const handleEditorDidMount = (_valueGetter) => {\r\n        setIsEditorReady(true);\r\n        valueGetter.current = _valueGetter;\r\n    }\r\n\r\n\r\n    const compileCode = async (data) => {\r\n        const response = await axios.post(\"http://localhost:7000/dirtybits/run/\", data);\r\n        const out = response.data;\r\n        if(\"error\" in out){\r\n            setOutput(\"ERROR \\n\" + out[\"error\"]);\r\n        }else{\r\n            setOutput(out[\"OUTPUT\"]);\r\n        }\r\n        setIsEditorReady(true);\r\n\r\n    }\r\n    \r\n\r\n    const runCode = () => {\r\n        setIsEditorReady(false);\r\n        // console.log(valueGetter.current(), language, theme, input);\r\n        if(input !== \"Enter Input\"){\r\n            const data = {\r\n                \"code\" : valueGetter.current(),\r\n                \"lang\" : \"C++\",\r\n                \"inp\" : input\r\n            }\r\n            compileCode(data);\r\n\r\n        }else{\r\n            const data = {\r\n                \"code\" : valueGetter.current(),\r\n                \"lang\" : \"C++\",\r\n            }\r\n            compileCode(data);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className = \"ui grid\">\r\n                <div className = \"four column\">\r\n                    <LanguageDropDown props = {language} dispatch = {setLanguage}/>\r\n                </div>\r\n                <div className = \"four column wide\">\r\n                    <ThemeDropDown props = {theme} dispatch = {setTheme}/>\r\n                </div>\r\n                <div className = \"four wide column\" style={{paddingTop:\"2%\"}}>\r\n                    <button className = \"ui red button\" onClick = {runCode} disabled={!isEditorReady}> Run Code</button>\r\n                </div>\r\n            </div> */}\r\n            <br/>\r\n            <Editor\r\n            value = \"Enter Code Here\"\r\n            loading = {<Loader/ >}\r\n            // height = \"calc(70vh - 60px)\"\r\n            height = \"70vh\" \r\n            width = \"100vw\"\r\n            theme = {theme} \r\n            language = {language}\r\n            editorDidMount={handleEditorDidMount}\r\n            />\r\n            <div className = \"ui segment\">\r\n                <div className = \"ui two column very relaxed grid\">\r\n                    <div className = \"column\">\r\n                        <InputField val = {input} dispatch = {setInput}/>\r\n                    </div>\r\n                    <div className = \"column\">\r\n                        <OutputField val = {output} dispatch = {setOutput}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default CodeEditor;\r\n"]},"metadata":{},"sourceType":"module"}