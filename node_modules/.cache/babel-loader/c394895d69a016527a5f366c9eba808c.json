{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Javascript\\\\react\\\\New Online Platform\\\\DirtyBits-FrontEnd\\\\src\\\\react-admin-dashboard\\\\src\\\\views\\\\users\\\\Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CPagination } from '@coreui/react';\nimport usersData from './UsersData';\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nconst Users = () => {\n  _s();\n\n  const history = useHistory();\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '');\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n  const [page, setPage] = useState(currentPage);\n\n  const pageChange = newPage => {\n    currentPage !== newPage && history.push(`/users?page=${newPage}`);\n  };\n\n  useEffect(() => {\n    currentPage !== page && setPage(currentPage);\n  }, [currentPage, page]);\n  return /*#__PURE__*/_jsxDEV(CRow, {\n    children: /*#__PURE__*/_jsxDEV(CCol, {\n      xl: 6,\n      children: /*#__PURE__*/_jsxDEV(CCard, {\n        children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n          children: [\"Users\", /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: \" example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CDataTable, {\n            items: usersData,\n            fields: [{\n              key: 'name',\n              _classes: 'font-weight-bold'\n            }, 'registered', 'role', 'status'],\n            hover: true,\n            striped: true,\n            itemsPerPage: 5,\n            activePage: page,\n            clickableRows: true,\n            onRowClick: item => history.push(`/users/${item.id}`),\n            scopedSlots: {\n              'status': item => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(CBadge, {\n                  color: getBadge(item.status),\n                  children: item.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CPagination, {\n            activePage: page,\n            onActivePageChange: pageChange,\n            pages: 5,\n            doubleArrows: false,\n            align: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Users, \"0yR2AYwMP3YyQyngiwe6vFZubv0=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["E:/Javascript/react/New Online Platform/DirtyBits-FrontEnd/src/react-admin-dashboard/src/views/users/Users.js"],"names":["React","useState","useEffect","useHistory","useLocation","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CPagination","usersData","getBadge","status","Users","history","queryPage","search","match","currentPage","Number","page","setPage","pageChange","newPage","push","key","_classes","item","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination\r\n} from '@coreui/react'\r\n\r\nimport usersData from './UsersData'\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst Users = () => {\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  const [page, setPage] = useState(currentPage)\r\n\r\n  const pageChange = newPage => {\r\n    currentPage !== newPage && history.push(`/users?page=${newPage}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    currentPage !== page && setPage(currentPage)\r\n  }, [currentPage, page])\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xl={6}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            Users\r\n            <small className=\"text-muted\"> example</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <CDataTable\r\n            items={usersData}\r\n            fields={[\r\n              { key: 'name', _classes: 'font-weight-bold' },\r\n              'registered', 'role', 'status'\r\n            ]}\r\n            hover\r\n            striped\r\n            itemsPerPage={5}\r\n            activePage={page}\r\n            clickableRows\r\n            onRowClick={(item) => history.push(`/users/${item.id}`)}\r\n            scopedSlots = {{\r\n              'status':\r\n                (item)=>(\r\n                  <td>\r\n                    <CBadge color={getBadge(item.status)}>\r\n                      {item.status}\r\n                    </CBadge>\r\n                  </td>\r\n                )\r\n            }}\r\n          />\r\n          <CPagination\r\n            activePage={page}\r\n            onActivePageChange={pageChange}\r\n            pages={5}\r\n            doubleArrows={false} \r\n            align=\"center\"\r\n          />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Users\r\n"]},"metadata":{},"sourceType":"module"}