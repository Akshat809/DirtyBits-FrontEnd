{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Javascript\\\\react\\\\New Online Platform\\\\DirtyBits-FrontEnd\\\\src\\\\react-admin-dashboard\\\\src\\\\views\\\\notifications\\\\toaster\\\\Toaster.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CCard, CCardHeader, CCardBody, CToast, CToastBody, CToastHeader, CToaster, CForm, CInput, CInputCheckbox, CButton, CContainer, CRow, CCol, CFormGroup, CLabel } from '@coreui/react';\nimport { DocsLink } from 'src/reusable';\n\nconst Toaster = () => {\n  _s();\n\n  const positions = ['static', 'top-left', 'top-center', 'top-right', 'top-full', 'bottom-left', 'bottom-center', 'bottom-right', 'bottom-full'];\n  const [toasts, setToasts] = useState([{\n    position: 'static'\n  }, {\n    position: 'static'\n  }, {\n    position: 'top-right',\n    autohide: 3000\n  }]);\n  const [position, setPosition] = useState('top-right');\n  const [autohide, setAutohide] = useState(true);\n  const [autohideValue, setAutohideValue] = useState(5000);\n  const [closeButton, setCloseButton] = useState(true);\n  const [fade, setFade] = useState(true);\n\n  const addToast = () => {\n    setToasts([...toasts, {\n      position,\n      autohide: autohide && autohideValue,\n      closeButton,\n      fade\n    }]);\n  };\n\n  const toasters = (() => {\n    return toasts.reduce((toasters, toast) => {\n      toasters[toast.position] = toasters[toast.position] || [];\n      toasters[toast.position].push(toast);\n      return toasters;\n    }, {});\n  })();\n\n  return /*#__PURE__*/_jsxDEV(CCard, {\n    children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n      children: [\"Toasts.\", /*#__PURE__*/_jsxDEV(DocsLink, {\n        name: \"-Toast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n      children: /*#__PURE__*/_jsxDEV(CContainer, {\n        children: /*#__PURE__*/_jsxDEV(CRow, {\n          children: [/*#__PURE__*/_jsxDEV(CCol, {\n            sm: \"12\",\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxDEV(CForm, {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Add toast with following props:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n                variant: \"custom-checkbox\",\n                className: \"my-2 mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(CInputCheckbox, {\n                  id: \"autohide\",\n                  checked: autohide,\n                  onChange: e => {\n                    setAutohide(e.target.checked);\n                  },\n                  custom: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CLabel, {\n                  variant: \"custom-checkbox\",\n                  htmlFor: \"autohide\",\n                  children: \"Autohide of the toast\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), autohide && /*#__PURE__*/_jsxDEV(CFormGroup, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                  htmlFor: \"ccyear\",\n                  children: \"Time to autohide\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CInput, {\n                  type: \"number\",\n                  value: autohideValue,\n                  onChange: e => {\n                    setAutohideValue(Number(e.target.value));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                  htmlFor: \"ccyear\",\n                  children: \"Position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  value: position,\n                  onChange: e => {\n                    setPosition(e.target.value);\n                  },\n                  children: positions.map((position, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: position\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n                variant: \"custom-checkbox\",\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(CInputCheckbox, {\n                  id: \"fade\",\n                  checked: fade,\n                  onChange: e => {\n                    setFade(e.target.checked);\n                  },\n                  custom: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CLabel, {\n                  variant: \"custom-checkbox\",\n                  htmlFor: \"fade\",\n                  children: \"fade\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n                variant: \"custom-checkbox\",\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(CInputCheckbox, {\n                  id: \"close\",\n                  custom: true,\n                  checked: closeButton,\n                  onChange: e => {\n                    setCloseButton(e.target.checked);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CLabel, {\n                  variant: \"custom-checkbox\",\n                  htmlFor: \"close\",\n                  children: \"closeButton\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                className: \"mr-1 w-25\",\n                color: \"success\",\n                onClick: addToast,\n                children: \"Add toast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CCol, {\n            sm: \"12\",\n            lg: \"6\",\n            children: Object.keys(toasters).map(toasterKey => /*#__PURE__*/_jsxDEV(CToaster, {\n              position: toasterKey,\n              children: toasters[toasterKey].map((toast, key) => {\n                return /*#__PURE__*/_jsxDEV(CToast, {\n                  show: true,\n                  autohide: toast.autohide,\n                  fade: toast.fade,\n                  children: [/*#__PURE__*/_jsxDEV(CToastHeader, {\n                    closeButton: toast.closeButton,\n                    children: \"Toast title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CToastBody, {\n                    children: `This is a toast in ${toasterKey} positioned toaster number ${key + 1}.`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 25\n                  }, this)]\n                }, 'toast' + key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this);\n              })\n            }, 'toaster' + toasterKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Toaster, \"Gno/TzmBCBrPxG5uTGibyCKXvrI=\");\n\n_c = Toaster;\nexport default Toaster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toaster\");","map":{"version":3,"sources":["E:/Javascript/react/New Online Platform/DirtyBits-FrontEnd/src/react-admin-dashboard/src/views/notifications/toaster/Toaster.js"],"names":["React","useState","CCard","CCardHeader","CCardBody","CToast","CToastBody","CToastHeader","CToaster","CForm","CInput","CInputCheckbox","CButton","CContainer","CRow","CCol","CFormGroup","CLabel","DocsLink","Toaster","positions","toasts","setToasts","position","autohide","setPosition","setAutohide","autohideValue","setAutohideValue","closeButton","setCloseButton","fade","setFade","addToast","toasters","reduce","toast","push","e","target","checked","Number","value","map","i","Object","keys","toasterKey","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CToast,\r\n  CToastBody,\r\n  CToastHeader,\r\n  CToaster,\r\n  CForm,\r\n  CInput,\r\n  CInputCheckbox,\r\n  CButton,\r\n  CContainer,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nconst Toaster = () => {\r\n\r\n  const positions = [\r\n    'static',\r\n    'top-left',\r\n    'top-center',\r\n    'top-right',\r\n    'top-full',\r\n    'bottom-left',\r\n    'bottom-center',\r\n    'bottom-right',\r\n    'bottom-full'\r\n  ]\r\n\r\n  const [toasts, setToasts] = useState([\r\n    { position: 'static'},\r\n    { position: 'static'},\r\n    { position: 'top-right', autohide: 3000 }\r\n  ])\r\n\r\n  const [position, setPosition] = useState('top-right')\r\n  const [autohide, setAutohide] = useState(true)\r\n  const [autohideValue, setAutohideValue] = useState(5000)\r\n  const [closeButton, setCloseButton] = useState(true)\r\n  const [fade, setFade] = useState(true)\r\n\r\n  const addToast = () => {\r\n    setToasts([\r\n      ...toasts, \r\n      { position, autohide: autohide && autohideValue, closeButton, fade }\r\n    ])\r\n  }\r\n\r\n\r\n  const toasters = (()=>{\r\n    return toasts.reduce((toasters, toast) => {\r\n      toasters[toast.position] = toasters[toast.position] || []\r\n      toasters[toast.position].push(toast)\r\n      return toasters\r\n    }, {})\r\n  })()\r\n\r\n\r\n  return (\r\n    <CCard>\r\n      <CCardHeader>\r\n        Toasts.\r\n        <DocsLink name=\"-Toast\"/>\r\n      </CCardHeader>\r\n      <CCardBody>\r\n        <CContainer>\r\n          <CRow>\r\n            <CCol sm=\"12\" lg=\"6\">\r\n              <CForm>\r\n                <h5>Add toast with following props:</h5>\r\n\r\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2 mt-4\">\r\n                  <CInputCheckbox\r\n                    id=\"autohide\"\r\n                    checked={autohide}\r\n                    onChange={e => { setAutohide(e.target.checked) }}\r\n                    custom\r\n                  />\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"autohide\">\r\n                    Autohide of the toast\r\n                  </CLabel>\r\n                </CFormGroup>\r\n                {\r\n                  autohide &&\r\n                  <CFormGroup className=\"my-2\">\r\n                    <CLabel htmlFor=\"ccyear\">Time to autohide</CLabel>\r\n                    <CInput\r\n                      type=\"number\"\r\n                      value={autohideValue}\r\n                      onChange={e => {\r\n                        setAutohideValue(Number(e.target.value))\r\n                      }}\r\n                    />\r\n                  </CFormGroup>\r\n                }\r\n\r\n                <CFormGroup className=\"my-2\">\r\n                  <CLabel htmlFor=\"ccyear\">Position</CLabel>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={position}\r\n                    onChange={e => {setPosition(e.target.value)}}\r\n                  >\r\n                    {\r\n                      positions.map((position, i)=>(\r\n                        <option key={i}>{position}</option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2\">\r\n                  <CInputCheckbox\r\n                    id=\"fade\"\r\n                    checked={fade}\r\n                    onChange={e => { setFade(e.target.checked) }}\r\n                    custom\r\n                  />\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"fade\">fade</CLabel>\r\n                </CFormGroup>\r\n\r\n                <CFormGroup variant=\"custom-checkbox\" className=\"my-2\">\r\n                  <CInputCheckbox\r\n                    id=\"close\"\r\n                    custom\r\n                    checked={closeButton}\r\n                    onChange={e=> { setCloseButton(e.target.checked) }}\r\n                  />\r\n                  <CLabel variant=\"custom-checkbox\" htmlFor=\"close\">\r\n                    closeButton\r\n                  </CLabel>\r\n                </CFormGroup>\r\n\r\n                <CButton\r\n                  className=\"mr-1 w-25\"\r\n                  color=\"success\"\r\n                  onClick={addToast}\r\n                >\r\n                  Add toast\r\n                </CButton>\r\n\r\n              </CForm>\r\n            </CCol>\r\n            <CCol sm=\"12\" lg=\"6\">\r\n              {Object.keys(toasters).map((toasterKey) => (\r\n                <CToaster\r\n                  position={toasterKey}\r\n                  key={'toaster' + toasterKey}\r\n                >\r\n                  {\r\n                    toasters[toasterKey].map((toast, key)=>{\r\n                    return(\r\n                      <CToast\r\n                        key={'toast' + key}\r\n                        show={true}\r\n                        autohide={toast.autohide}\r\n                        fade={toast.fade}\r\n                      >\r\n                        <CToastHeader closeButton={toast.closeButton}>\r\n                          Toast title\r\n                        </CToastHeader>\r\n                        <CToastBody>\r\n                          {`This is a toast in ${toasterKey} positioned toaster number ${key + 1}.`}\r\n                        </CToastBody>\r\n                      </CToast>\r\n                    )\r\n                  })\r\n                  }\r\n                </CToaster>\r\n              ))}\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </CCardBody>\r\n    </CCard>\r\n  )\r\n}\r\n\r\nexport default Toaster\r\n"]},"metadata":{},"sourceType":"module"}