{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Javascript\\\\react\\\\New Online Platform\\\\DirtyBits-FrontEnd\\\\src\\\\Components\\\\ProbemList\\\\ProblemList.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport Card from './Component/Card';\nimport Spinner from './Component/Spinner';\nimport Dropdown from './Component/Dropdown';\nimport Checkbox from './Component/Checkbox';\n\nclass ProblemList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      level: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.post('http://54.198.168.63/getData/', {\n      \"type\": \"list\",\n      \"tags\": [\"String\"],\n      'level': 'E'\n    }).then(reponse => {\n      console.log(reponse.data.map(d => console.log(d)));\n      this.setState({\n        questions: reponse.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.state.questions);\n\n    if (prevState.level !== this.state.level) {\n      console.log('required new request');\n      axios.post('http://54.198.168.63/getData/', {\n        \"type\": \"list\",\n        \"tags\": [\"String\"]\n      }).then(reponse => {\n        console.log(reponse.data);\n        this.setState({\n          questions: reponse.data.filter(question => question.level === this.state.level)\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      console.log('do not required request');\n    }\n  }\n\n  render() {\n    const {\n      questions\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"container\",\n        style: {\n          textAlign: 'center',\n          marginTop: '4%'\n        },\n        children: \"Problem List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        onChange: value => this.setState({\n          level: value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), questions.length ? questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 30,\n          marginTop: '10%',\n          marginLeft: '10%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          id: question.id,\n          title: question.level,\n          description: question.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '5%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 88\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ProblemList;","map":{"version":3,"sources":["E:/Javascript/react/New Online Platform/DirtyBits-FrontEnd/src/Components/ProbemList/ProblemList.js"],"names":["React","axios","Card","Spinner","Dropdown","Checkbox","ProblemList","Component","constructor","props","state","questions","level","componentDidMount","post","then","reponse","console","log","data","map","d","setState","catch","error","componentDidUpdate","prevProps","prevState","filter","question","render","textAlign","marginTop","value","length","fontSize","marginLeft","id","description","display","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport Card from './Component/Card';\r\nimport Spinner from './Component/Spinner';\r\nimport Dropdown from './Component/Dropdown';\r\nimport Checkbox from './Component/Checkbox';\r\n\r\nclass ProblemList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      questions: [],\r\n      level:''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.post('http://54.198.168.63/getData/',{\r\n      \"type\" : \"list\",\r\n      \"tags\" : [\"String\"],\r\n      'level': 'E'\r\n    })\r\n      .then(reponse => {\r\n        console.log(reponse.data.map(d => console.log(d)))\r\n        this.setState(\r\n          { questions:reponse.data }\r\n        )\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    console.log(this.state.questions)\r\n    if (prevState.level !== this.state.level){\r\n        console.log('required new request')\r\n        axios.post('http://54.198.168.63/getData/',{\r\n      \"type\" : \"list\",\r\n      \"tags\" : [\"String\"],\r\n    })\r\n      .then(reponse => {\r\n        console.log(reponse.data)\r\n        this.setState(\r\n          { questions:reponse.data.filter(question => question.level === this.state.level)}\r\n        )\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n    }else {\r\n      console.log('do not required request')\r\n  }\r\n  } \r\n\r\n\r\n  render(){\r\n    const {questions} = this.state;\r\n    return (\r\n      <div>\r\n        <h1 className=\"container\" style={{textAlign:'center', marginTop: '4%'}}>Problem List</h1>\r\n        <Dropdown onChange={value => this.setState(\r\n          { level:value }\r\n          )}/>\r\n        {\r\n          questions.length ? \r\n          questions.map(question => <div style={ { fontSize:30,marginTop:'10%',marginLeft:'10%' }} key={question.id}>\r\n            <Card id={question.id} title={question.level} description={question.description}/>\r\n            </div>\r\n            ):<div style={{display:'flex', justifyContent: 'center', marginTop: '5%'}}><Spinner/></div>\r\n          }\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ProblemList;\r\n"]},"metadata":{},"sourceType":"module"}