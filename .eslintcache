[{"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\index.js":"1","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\App.js":"2","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\OutputField.js":"3","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\InputField.js":"4","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\Menu.js":"5","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\LanguageDropDown.js":"6","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\CodeEditor.js":"7"},{"size":149,"mtime":1606300756460,"results":"8","hashOfConfig":"9"},{"size":203,"mtime":1606323991133,"results":"10","hashOfConfig":"9"},{"size":491,"mtime":1603113461213,"results":"11","hashOfConfig":"9"},{"size":444,"mtime":1603110447845,"results":"12","hashOfConfig":"9"},{"size":4687,"mtime":1606324136142,"results":"13","hashOfConfig":"9"},{"size":827,"mtime":1606322741457,"results":"14","hashOfConfig":"9"},{"size":5725,"mtime":1606325098458,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1cyn1as",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\index.js",[],["33","34"],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\App.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\OutputField.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\InputField.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\Menu.js",["35","36","37","38"],"import CodeEditor from './CodeEditor'\r\nimport React from 'react'\r\nimport logo from '../static/Logo.jpg';\r\n\r\n\r\nfunction Menu() {\r\n    return (\r\n        <div>\r\n            <div className=\"ui secondary pointing menu\">\r\n                <div className = \"left menu\">\r\n                    <div className = \"item\">\r\n                        <img src = {logo} alt = \"logo\"></img>\r\n                        DirtyBits\r\n                    </div>\r\n                </div>\r\n                <a className = \"active item\">\r\n                    Home\r\n                </a>\r\n                <a className=\"item\">\r\n                    Compete\r\n                </a>\r\n                <a className=\"item\">\r\n                    Practice\r\n                </a>\r\n                <a className=\"item\">\r\n                    Blogs\r\n                </a>\r\n                <div className = \"right item\">\r\n                    <div className=\"ui search\">\r\n                        <div className=\"ui icon input\">\r\n                            <input className=\"prompt\" type=\"text\" placeholder=\"Search ...\"></input>\r\n                            <i className=\"search icon\"></i>\r\n                        </div>\r\n                        <div className=\"results\"></div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"right menu\">\r\n                    <div className = \"item\">\r\n                        <img src = {logo} alt = \"logo\"></img>\r\n                        <div className=\"ui dropdown\">\r\n                            <div className=\"text\">Name</div>\r\n                                <i className=\"dropdown icon\"></i>\r\n                                <div className=\"menu\">\r\n                                    <div className=\"item\">New</div>\r\n                                    <div className=\"item\">\r\n                                    <span className=\"description\">ctrl + o</span>\r\n                                    Open...\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                    <span className=\"description\">ctrl + s</span>\r\n                                    Save as...\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                    <span className=\"description\">ctrl + r</span>\r\n                                    Rename\r\n                                    </div>\r\n                                    <div className=\"item\">Make a copy</div>\r\n                                    <div className=\"item\">\r\n                                    <i className=\"folder icon\"></i>\r\n                                    Move to folder\r\n                                    </div>\r\n                                    <div className=\"item\">\r\n                                    <i className=\"trash icon\"></i>\r\n                                    Move to trash\r\n                                    </div>\r\n                                    <div className=\"divider\"></div>\r\n                                    <div className=\"item\">Download As...</div>\r\n                                    <div className=\"item\">\r\n                                    <i className=\"dropdown icon\"></i>\r\n                                    Publish To Web\r\n                                    <div className=\"menu\">\r\n                                        <div className=\"item\">Google Docs</div>\r\n                                        <div className=\"item\">Google Drive</div>\r\n                                        <div className=\"item\">Dropbox</div>\r\n                                        <div className=\"item\">Adobe Creative Cloud</div>\r\n                                        <div className=\"item\">Private FTP</div>\r\n                                        <div className=\"item\">Another Service...</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"item\">E-mail Collaborators</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"ui two column very relaxed grid\">\r\n                    <div className=\"column\" style = {{borderRight: \"3px solid grey\"}}>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <CodeEditor/>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"ui vertical divider\">\r\n                    Code\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\LanguageDropDown.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\CodeEditor.js",["39"],"import React, {useRef, useState} from 'react';\r\nimport Editor from '@monaco-editor/react';\r\nimport { FillSpinner as Loader } from 'react-spinners-kit';  \r\nimport ThemeDropDown from './ThemeDropDown';\r\nimport LanguageDropDown from './LanguageDropDown';\r\nimport InputField from './InputField';\r\nimport OutputField from './OutputField';\r\nimport axios from 'axios';\r\nimport './EditorStyle.css';\r\n\r\nconst CodeEditor = (props) => {\r\n\r\n    const [isEditorReady, setIsEditorReady] = useState(false);\r\n    const valueGetter = useRef();\r\n\r\n    const [theme, setTheme] = useState(\"dark\");\r\n    const [language, setLanguage] = useState(\"cpp\");\r\n    const [input, setInput] = useState(\"Enter Input\");\r\n    const [output, setOutput] = useState(\"Output will be Displayed Here\");\r\n\r\n    const handleEditorDidMount = (_valueGetter) => {\r\n        setIsEditorReady(true);\r\n        valueGetter.current = _valueGetter;\r\n    }\r\n    const compileCode = async (data) => {\r\n        const response = await axios.post(\"http://localhost:7000/dirtybits/run/\", data);\r\n        const out = response.data;\r\n        if(\"error\" in out){\r\n            setOutput(\"ERROR \\n\" + out[\"error\"]);\r\n        }else{\r\n            setOutput(out[\"OUTPUT\"]);\r\n        }\r\n        if(document.getElementById('custominput').checked){\r\n            document.getElementById(\"inputfield\").style.display = \"none\";\r\n            document.getElementById(\"outputfield\").style.display = \"none\";\r\n            var x = document.getElementById(\"inputoutputfield\");\r\n            x.style.display = \"block\";\r\n            x.focus();\r\n            x.scrollIntoView();\r\n        }else{\r\n            document.getElementById(\"inputoutputfield\").style.display = 'none';\r\n            document.getElementById(\"inputfield\").style.display = \"none\";\r\n            var x = document.getElementById(\"outputfield\");\r\n            x.style.display = \"block\";\r\n            x.focus();\r\n            x.scrollIntoView();\r\n        }\r\n        setIsEditorReady(true);\r\n\r\n    }\r\n    const runCode = () => {\r\n        setIsEditorReady(false);\r\n        \r\n        if(input !== \"Enter Input\"){\r\n            const data = {\r\n                \"code\" : valueGetter.current(),\r\n                \"lang\" : \"C++\",\r\n                \"inp\" : input\r\n            }\r\n            compileCode(data);\r\n\r\n        }else{\r\n            const data = {\r\n                \"code\" : valueGetter.current(),\r\n                \"lang\" : \"C++\",\r\n            }\r\n            compileCode(data);\r\n        }\r\n    }\r\n    const inputProvided = () => {\r\n        const inpVal = document.getElementById('custominput').checked;\r\n        var x = document.getElementById(\"inputfield\");\r\n        if(inpVal){\r\n            if(document.getElementById(\"outputfield\").style.display === \"block\"){\r\n                document.getElementById(\"outputfield\").style.display = 'none'\r\n                document.getElementById(\"inputoutputfield\").style.display = 'block'\r\n            }else if(document.getElementById(\"inputoutputfield\").style.display === 'block'){\r\n                document.getElementById(\"inputoutputfield\").style.display = 'block'\r\n            }else{\r\n                x.style.display = \"block\";\r\n                x.focus();\r\n                x.scrollIntoView();\r\n            }\r\n        }else{\r\n            x.style.display = \"none\";\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className = \"ui grid\">\r\n                <div className = \"eight wide column\">\r\n                    <LanguageDropDown props = {language} dispatch = {setLanguage}/>\r\n                </div>\r\n                <div className = \"eight wide column\">\r\n                    <ThemeDropDown props = {theme} dispatch = {setTheme}/>\r\n                </div>\r\n            </div>\r\n            {/* <hr/> */}\r\n            <br/>\r\n            <Editor\r\n            value = \"Enter Code Here\"\r\n            loading = {<Loader/ >}\r\n            height = \"calc(100vh - 300px)\"\r\n            width = \"100vw\"\r\n            theme = {theme} \r\n            language = {language}\r\n            editorDidMount={handleEditorDidMount}\r\n            />\r\n            <div className = \"ui segment\">\r\n                <div className = \"ui grid\">\r\n                    <div className = \"eight wide column\">\r\n                        <div class=\"ui checkbox\">\r\n                            <input type = \"checkbox\" onClick = {inputProvided} id = 'custominput'></input>\r\n                            <label>Custom Input </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className = \"eight wide column\" style={{paddingTop:\"2%\", alignItems: \"right\"}}>\r\n                        <button className = \"ui red button\" onClick = {runCode} disabled = {!isEditorReady}> Run Code</button>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>           \r\n                <div className = \"column\" id = \"inputfield\" style = {{display:\"none\"}}>\r\n                    <InputField val = {input} dispatch = {setInput}/>\r\n                </div>\r\n            \r\n                <div className = \"column\" id = \"outputfield\" style = {{display:\"none\"}}>\r\n                    <OutputField val = {output} dispatch = {setOutput}/>\r\n                </div>           \r\n                <div className = \"ui two column very relaxed grid\" id = \"inputoutputfield\" style = {{display:\"none\"}}>\r\n                    <div className = \"column\">\r\n                        <InputField val = {input} dispatch = {setInput}/>\r\n                    </div>\r\n                    <div className = \"column\">\r\n                        <OutputField val = {output} dispatch = {setOutput}/>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CodeEditor;\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":16,"column":17,"nodeType":"46","endLine":16,"endColumn":46},{"ruleId":"44","severity":1,"message":"45","line":19,"column":17,"nodeType":"46","endLine":19,"endColumn":37},{"ruleId":"44","severity":1,"message":"45","line":22,"column":17,"nodeType":"46","endLine":22,"endColumn":37},{"ruleId":"44","severity":1,"message":"45","line":25,"column":17,"nodeType":"46","endLine":25,"endColumn":37},{"ruleId":"47","severity":1,"message":"48","line":43,"column":17,"nodeType":"49","messageId":"50","endLine":43,"endColumn":18},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-redeclare","'x' is already defined.","Identifier","redeclared","no-global-assign","no-unsafe-negation"]