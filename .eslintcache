[{"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\Navbar.js":"1","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\App.js":"2","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\CodeEditor.js":"3","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\ProblemArea.js":"4","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\index.js":"5","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\Menu.js":"6","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\ThemeDropDown.js":"7","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\Problem.js":"8","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\InputField.js":"9","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\OutputField.js":"10","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\LanguageDropDown.js":"11"},{"size":2122,"mtime":1611301061947,"results":"12","hashOfConfig":"13"},{"size":284,"mtime":1611301101401,"results":"14","hashOfConfig":"13"},{"size":5627,"mtime":1611301021441,"results":"15","hashOfConfig":"13"},{"size":984,"mtime":1611301087142,"results":"16","hashOfConfig":"13"},{"size":151,"mtime":1611301106017,"results":"17","hashOfConfig":"13"},{"size":711,"mtime":1611301051949,"results":"18","hashOfConfig":"13"},{"size":687,"mtime":1611301096314,"results":"19","hashOfConfig":"13"},{"size":167,"mtime":1611301078194,"results":"20","hashOfConfig":"13"},{"size":510,"mtime":1611301040923,"results":"21","hashOfConfig":"13"},{"size":547,"mtime":1611301072683,"results":"22","hashOfConfig":"13"},{"size":679,"mtime":1611301047581,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cyn1as",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\Navbar.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\App.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\CodeEditor.js",["47"],"import React, { useRef, useState } from \"react\";\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { FillSpinner as Loader } from \"react-spinners-kit\";\r\nimport ThemeDropDown from \"./ThemeDropDown\";\r\nimport LanguageDropDown from \"./LanguageDropDown\";\r\nimport InputField from \"./InputField\";\r\nimport OutputField from \"./OutputField\";\r\nimport axios from \"axios\";\r\nimport \"./EditorStyle.css\";\r\n\r\nlet info = require(\"./data.json\");\r\n\r\nconst CodeEditor = (props) => {\r\n  var mapping = { python: \"P3\", cpp: \"CP\" };\r\n  var score;\r\n\r\n  const [isEditorReady, setIsEditorReady] = useState(false);\r\n  const valueGetter = useRef();\r\n\r\n  const [theme, setTheme] = useState(\"dark\");\r\n  const [language, setLanguage] = useState(\"cpp\");\r\n  const [input, setInput] = useState(\"Enter Input\");\r\n  const [output, setOutput] = useState(\"Output will be Displayed Here\");\r\n\r\n  const handleEditorDidMount = (_valueGetter) => {\r\n    setIsEditorReady(true);\r\n    valueGetter.current = _valueGetter;\r\n  };\r\n  const compileCode = async (data) => {\r\n    console.log(data);\r\n    const response = await axios.post(\r\n      \"https://schdserver.herokuapp.com/run/\",\r\n      data\r\n    );\r\n    const out = response.data;\r\n    score = out[\"testCasesPassed\"];\r\n    if (!document.getElementById(\"custominput\").checked) {\r\n      document.getElementById(\"result\").innerHTML =\r\n        \"Test Cases Passed : \" + score;\r\n    }\r\n    if (out[\"error\"] !== \"\") {\r\n      setOutput(\"ERROR \\n\" + out[\"error\"]);\r\n    } else {\r\n      if (out[\"outputGen\"] !== \"\") {\r\n        setOutput(out[\"outputGen\"]);\r\n      }\r\n    }\r\n    if (document.getElementById(\"custominput\").checked) {\r\n      document.getElementById(\"inputfield\").style.display = \"none\";\r\n      document.getElementById(\"outputfield\").style.display = \"none\";\r\n      var x = document.getElementById(\"inputoutputfield\");\r\n      x.style.display = \"block\";\r\n      x.focus();\r\n      x.scrollIntoView();\r\n    } else {\r\n      document.getElementById(\"inputoutputfield\").style.display = \"none\";\r\n      document.getElementById(\"inputfield\").style.display = \"none\";\r\n    }\r\n    setIsEditorReady(true);\r\n  };\r\n  const runCode = () => {\r\n    setIsEditorReady(false);\r\n\r\n    if (input !== \"Enter Input\") {\r\n      const data = {\r\n        userId: 2,\r\n        problemId: info.id,\r\n        code: valueGetter.current(),\r\n        language: mapping[language],\r\n        inputGiven: input,\r\n        status: \"R\",\r\n        testCasesPassed: 0,\r\n      };\r\n      compileCode(data);\r\n    } else {\r\n      const data = {\r\n        userId: 2,\r\n        problemId: info.id,\r\n        code: valueGetter.current(),\r\n        language: mapping[language],\r\n        inputGiven: \"\",\r\n        status: \"R\",\r\n        testCasesPassed: 0,\r\n      };\r\n      compileCode(data);\r\n    }\r\n  };\r\n  const inputProvided = () => {\r\n    const inpVal = document.getElementById(\"custominput\").checked;\r\n    var x = document.getElementById(\"inputfield\");\r\n    if (inpVal) {\r\n      if (document.getElementById(\"outputfield\").style.display === \"block\") {\r\n        document.getElementById(\"outputfield\").style.display = \"none\";\r\n        document.getElementById(\"inputoutputfield\").style.display = \"block\";\r\n      } else if (\r\n        document.getElementById(\"inputoutputfield\").style.display === \"block\"\r\n      ) {\r\n        document.getElementById(\"inputoutputfield\").style.display = \"block\";\r\n      } else {\r\n        x.style.display = \"block\";\r\n        x.focus();\r\n        x.scrollIntoView();\r\n      }\r\n    } else {\r\n      x.style.display = \"none\";\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"ui grid\">\r\n        <div className=\"eight wide column\">\r\n          <LanguageDropDown props={language} dispatch={setLanguage} />\r\n        </div>\r\n        <div className=\"eight wide column\">\r\n          <ThemeDropDown props={theme} dispatch={setTheme} />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <Editor\r\n        value=\"Enter Code Here\"\r\n        loading={<Loader />}\r\n        height=\"calc(100vh - 300px)\"\r\n        theme={theme}\r\n        language={language}\r\n        editorDidMount={handleEditorDidMount}\r\n      />\r\n      <div className=\"ui segment\">\r\n        <h3 id=\"result\"></h3>\r\n        <div className=\"ui grid\">\r\n          <div className=\"eight wide column\">\r\n            <div className=\"ui checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onClick={inputProvided}\r\n                id=\"custominput\"\r\n              ></input>\r\n              <label>Custom Input </label>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"eight wide column\"\r\n            style={{ paddingTop: \"2%\", alignItems: \"right\" }}\r\n          >\r\n            <button\r\n              className=\"ui red button\"\r\n              onClick={runCode}\r\n              disabled={!isEditorReady}\r\n            >\r\n              {\" \"}\r\n              Run Code\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"column\" id=\"inputfield\" style={{ display: \"none\" }}>\r\n        <InputField val={input} dispatch={setInput} />\r\n      </div>\r\n\r\n      <div className=\"column\" id=\"outputfield\" style={{ display: \"none\" }}>\r\n        <OutputField val={output} dispatch={setOutput} />\r\n      </div>\r\n      <div\r\n        className=\"ui two column very relaxed grid\"\r\n        id=\"inputoutputfield\"\r\n        style={{ display: \"none\" }}\r\n      >\r\n        <div className=\"column\">\r\n          <InputField val={input} dispatch={setInput} />\r\n        </div>\r\n        <div className=\"column\">\r\n          <OutputField val={output} dispatch={setOutput} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\ProblemArea.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\index.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\Menu.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\ThemeDropDown.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\Problem.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\InputField.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\OutputField.js",[],"C:\\Users\\himan\\OneDrive\\Desktop\\DirtyBits\\frontend\\src\\Components\\Problem\\LanguageDropDown.js",[],{"ruleId":"48","severity":1,"message":"49","line":128,"column":9,"nodeType":"50","endLine":128,"endColumn":25},"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement"]